
=pod

=head1 METHODS

=head2 mfoo ([ A => Int $A ], [ B => Str \$B ], C => Int|Str $C, [ D =>  $D ]) B<DEPRECATED>

Inherited from L<foo>

mfoo_purpose

B<Synopsis:>

        mfoo_example

B<Parameters:>

=over 4

=item * Int C<<< $A >>> (named, optional)

mfoo_a

=item * Str C<<< $B >>> (named, aliased, optional)

mfoo_b

=item * Int | Str C<<< $C >>> (named, required)

mfoo_c

=item *  C<<< $D >>> (named, optional, defaults to C<<<  2  >>>, but only when C<<<  { 1 == 0 } >>>)

=back

mfoo_pod1

mfoo_pod2

B<Returns:>

mfoo_returns

B<Throws:>

=over 4

=item * mfoo_throws1

=item * mfoo_throws2

=back

B<Available since:> mfoo_since

B<DEPRECATION WARNING:>

mfoo_deprecated

B<Author:> mfoo_author1, mfoo_author2

=head2 xxx ()

Inherited from L<foo>

xxx

=head1 EXTENDS

=head2 foo1

=over 4

=item * L<foo>

=back

=cut
